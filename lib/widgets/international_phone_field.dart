import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

class InternationalPhoneField extends StatefulWidget {
  final String? initialCountryCode;
  final String? initialPhoneNumber;
  final String? label;
  final String? hint;
  final ValueChanged<String>? onCountryCodeChanged;
  final ValueChanged<String>? onPhoneNumberChanged;
  final String? Function(String?)? validator;
  final bool enabled;
  final TextEditingController? controller;

  const InternationalPhoneField({
    super.key,
    this.initialCountryCode,
    this.initialPhoneNumber,
    this.label,
    this.hint,
    this.onCountryCodeChanged,
    this.onPhoneNumberChanged,
    this.validator,
    this.enabled = true,
    this.controller,
  });

  @override
  State<InternationalPhoneField> createState() =>
      _InternationalPhoneFieldState();
}

class _InternationalPhoneFieldState extends State<InternationalPhoneField> {
  late TextEditingController _phoneController;
  String _selectedCountryCode = '+39'; // Default to Italy

  // Lista dei prefissi internazionali piÃ¹ comuni
  final List<Map<String, String>> _countryCodes = [
    {'code': '+39', 'country': 'ğŸ‡®ğŸ‡¹ Italia', 'flag': 'ğŸ‡®ğŸ‡¹'},
    {'code': '+1', 'country': 'ğŸ‡ºğŸ‡¸ USA/Canada', 'flag': 'ğŸ‡ºğŸ‡¸'},
    {'code': '+44', 'country': 'ğŸ‡¬ğŸ‡§ Regno Unito', 'flag': 'ğŸ‡¬ğŸ‡§'},
    {'code': '+33', 'country': 'ğŸ‡«ğŸ‡· Francia', 'flag': 'ğŸ‡«ğŸ‡·'},
    {'code': '+49', 'country': 'ğŸ‡©ğŸ‡ª Germania', 'flag': 'ğŸ‡©ğŸ‡ª'},
    {'code': '+34', 'country': 'ğŸ‡ªğŸ‡¸ Spagna', 'flag': 'ğŸ‡ªğŸ‡¸'},
    {'code': '+41', 'country': 'ğŸ‡¨ğŸ‡­ Svizzera', 'flag': 'ğŸ‡¨ğŸ‡­'},
    {'code': '+43', 'country': 'ğŸ‡¦ğŸ‡¹ Austria', 'flag': 'ğŸ‡¦ğŸ‡¹'},
    {'code': '+31', 'country': 'ğŸ‡³ğŸ‡± Paesi Bassi', 'flag': 'ğŸ‡³ğŸ‡±'},
    {'code': '+32', 'country': 'ğŸ‡§ğŸ‡ª Belgio', 'flag': 'ğŸ‡§ğŸ‡ª'},
    {'code': '+351', 'country': 'ğŸ‡µğŸ‡¹ Portogallo', 'flag': 'ğŸ‡µğŸ‡¹'},
    {'code': '+30', 'country': 'ğŸ‡¬ğŸ‡· Grecia', 'flag': 'ğŸ‡¬ğŸ‡·'},
    {'code': '+45', 'country': 'ğŸ‡©ğŸ‡° Danimarca', 'flag': 'ğŸ‡©ğŸ‡°'},
    {'code': '+46', 'country': 'ğŸ‡¸ğŸ‡ª Svezia', 'flag': 'ğŸ‡¸ğŸ‡ª'},
    {'code': '+47', 'country': 'ğŸ‡³ğŸ‡´ Norvegia', 'flag': 'ğŸ‡³ğŸ‡´'},
    {'code': '+358', 'country': 'ğŸ‡«ğŸ‡® Finlandia', 'flag': 'ğŸ‡«ğŸ‡®'},
    {'code': '+48', 'country': 'ğŸ‡µğŸ‡± Polonia', 'flag': 'ğŸ‡µğŸ‡±'},
    {'code': '+420', 'country': 'ğŸ‡¨ğŸ‡¿ Repubblica Ceca', 'flag': 'ğŸ‡¨ğŸ‡¿'},
    {'code': '+421', 'country': 'ğŸ‡¸ğŸ‡° Slovacchia', 'flag': 'ğŸ‡¸ğŸ‡°'},
    {'code': '+36', 'country': 'ğŸ‡­ğŸ‡º Ungheria', 'flag': 'ğŸ‡­ğŸ‡º'},
    {'code': '+40', 'country': 'ğŸ‡·ğŸ‡´ Romania', 'flag': 'ğŸ‡·ğŸ‡´'},
    {'code': '+359', 'country': 'ğŸ‡§ğŸ‡¬ Bulgaria', 'flag': 'ğŸ‡§ğŸ‡¬'},
    {'code': '+385', 'country': 'ğŸ‡­ğŸ‡· Croazia', 'flag': 'ğŸ‡­ğŸ‡·'},
    {'code': '+386', 'country': 'ğŸ‡¸ğŸ‡® Slovenia', 'flag': 'ğŸ‡¸ğŸ‡®'},
    {'code': '+372', 'country': 'ğŸ‡ªğŸ‡ª Estonia', 'flag': 'ğŸ‡ªğŸ‡ª'},
    {'code': '+371', 'country': 'ğŸ‡±ğŸ‡» Lettonia', 'flag': 'ğŸ‡±ğŸ‡»'},
    {'code': '+370', 'country': 'ğŸ‡±ğŸ‡¹ Lituania', 'flag': 'ğŸ‡±ğŸ‡¹'},
    {'code': '+7', 'country': 'ğŸ‡·ğŸ‡º Russia', 'flag': 'ğŸ‡·ğŸ‡º'},
    {'code': '+380', 'country': 'ğŸ‡ºğŸ‡¦ Ucraina', 'flag': 'ğŸ‡ºğŸ‡¦'},
    {'code': '+375', 'country': 'ğŸ‡§ğŸ‡¾ Bielorussia', 'flag': 'ğŸ‡§ğŸ‡¾'},
    {'code': '+90', 'country': 'ğŸ‡¹ğŸ‡· Turchia', 'flag': 'ğŸ‡¹ğŸ‡·'},
    {'code': '+86', 'country': 'ğŸ‡¨ğŸ‡³ Cina', 'flag': 'ğŸ‡¨ğŸ‡³'},
    {'code': '+81', 'country': 'ğŸ‡¯ğŸ‡µ Giappone', 'flag': 'ğŸ‡¯ğŸ‡µ'},
    {'code': '+82', 'country': 'ğŸ‡°ğŸ‡· Corea del Sud', 'flag': 'ğŸ‡°ğŸ‡·'},
    {'code': '+91', 'country': 'ğŸ‡®ğŸ‡³ India', 'flag': 'ğŸ‡®ğŸ‡³'},
    {'code': '+61', 'country': 'ğŸ‡¦ğŸ‡º Australia', 'flag': 'ğŸ‡¦ğŸ‡º'},
    {'code': '+64', 'country': 'ğŸ‡³ğŸ‡¿ Nuova Zelanda', 'flag': 'ğŸ‡³ğŸ‡¿'},
    {'code': '+55', 'country': 'ğŸ‡§ğŸ‡· Brasile', 'flag': 'ğŸ‡§ğŸ‡·'},
    {'code': '+52', 'country': 'ğŸ‡²ğŸ‡½ Messico', 'flag': 'ğŸ‡²ğŸ‡½'},
    {'code': '+54', 'country': 'ğŸ‡¦ğŸ‡· Argentina', 'flag': 'ğŸ‡¦ğŸ‡·'},
    {'code': '+56', 'country': 'ğŸ‡¨ğŸ‡± Cile', 'flag': 'ğŸ‡¨ğŸ‡±'},
    {'code': '+57', 'country': 'ğŸ‡¨ğŸ‡´ Colombia', 'flag': 'ğŸ‡¨ğŸ‡´'},
    {'code': '+51', 'country': 'ğŸ‡µğŸ‡ª PerÃ¹', 'flag': 'ğŸ‡µğŸ‡ª'},
    {'code': '+58', 'country': 'ğŸ‡»ğŸ‡ª Venezuela', 'flag': 'ğŸ‡»ğŸ‡ª'},
    {'code': '+27', 'country': 'ğŸ‡¿ğŸ‡¦ Sudafrica', 'flag': 'ğŸ‡¿ğŸ‡¦'},
    {'code': '+20', 'country': 'ğŸ‡ªğŸ‡¬ Egitto', 'flag': 'ğŸ‡ªğŸ‡¬'},
    {'code': '+212', 'country': 'ğŸ‡²ğŸ‡¦ Marocco', 'flag': 'ğŸ‡²ğŸ‡¦'},
    {'code': '+213', 'country': 'ğŸ‡©ğŸ‡¿ Algeria', 'flag': 'ğŸ‡©ğŸ‡¿'},
    {'code': '+216', 'country': 'ğŸ‡¹ğŸ‡³ Tunisia', 'flag': 'ğŸ‡¹ğŸ‡³'},
    {'code': '+218', 'country': 'ğŸ‡±ğŸ‡¾ Libia', 'flag': 'ğŸ‡±ğŸ‡¾'},
    {'code': '+249', 'country': 'ğŸ‡¸ğŸ‡© Sudan', 'flag': 'ğŸ‡¸ğŸ‡©'},
    {'code': '+251', 'country': 'ğŸ‡ªğŸ‡¹ Etiopia', 'flag': 'ğŸ‡ªğŸ‡¹'},
    {'code': '+254', 'country': 'ğŸ‡°ğŸ‡ª Kenya', 'flag': 'ğŸ‡°ğŸ‡ª'},
    {'code': '+234', 'country': 'ğŸ‡³ğŸ‡¬ Nigeria', 'flag': 'ğŸ‡³ğŸ‡¬'},
    {'code': '+233', 'country': 'ğŸ‡¬ğŸ‡­ Ghana', 'flag': 'ğŸ‡¬ğŸ‡­'},
    {'code': '+225', 'country': 'ğŸ‡¨ğŸ‡® Costa d\'Avorio', 'flag': 'ğŸ‡¨ğŸ‡®'},
    {'code': '+221', 'country': 'ğŸ‡¸ğŸ‡³ Senegal', 'flag': 'ğŸ‡¸ğŸ‡³'},
    {'code': '+223', 'country': 'ğŸ‡²ğŸ‡± Mali', 'flag': 'ğŸ‡²ğŸ‡±'},
    {'code': '+226', 'country': 'ğŸ‡§ğŸ‡« Burkina Faso', 'flag': 'ğŸ‡§ğŸ‡«'},
    {'code': '+227', 'country': 'ğŸ‡³ğŸ‡ª Niger', 'flag': 'ğŸ‡³ğŸ‡ª'},
    {'code': '+228', 'country': 'ğŸ‡¹ğŸ‡¬ Togo', 'flag': 'ğŸ‡¹ğŸ‡¬'},
    {'code': '+229', 'country': 'ğŸ‡§ğŸ‡¯ Benin', 'flag': 'ğŸ‡§ğŸ‡¯'},
    {'code': '+230', 'country': 'ğŸ‡²ğŸ‡º Mauritius', 'flag': 'ğŸ‡²ğŸ‡º'},
    {'code': '+231', 'country': 'ğŸ‡±ğŸ‡· Liberia', 'flag': 'ğŸ‡±ğŸ‡·'},
    {'code': '+232', 'country': 'ğŸ‡¸ğŸ‡± Sierra Leone', 'flag': 'ğŸ‡¸ğŸ‡±'},
    {'code': '+235', 'country': 'ğŸ‡¹ğŸ‡© Ciad', 'flag': 'ğŸ‡¹ğŸ‡©'},
    {
      'code': '+236',
      'country': 'ğŸ‡¨ğŸ‡« Repubblica Centrafricana',
      'flag': 'ğŸ‡¨ğŸ‡«',
    },
    {'code': '+237', 'country': 'ğŸ‡¨ğŸ‡² Camerun', 'flag': 'ğŸ‡¨ğŸ‡²'},
    {'code': '+238', 'country': 'ğŸ‡¨ğŸ‡» Capo Verde', 'flag': 'ğŸ‡¨ğŸ‡»'},
    {'code': '+239', 'country': 'ğŸ‡¸ğŸ‡¹ SÃ£o TomÃ© e PrÃ­ncipe', 'flag': 'ğŸ‡¸ğŸ‡¹'},
    {'code': '+240', 'country': 'ğŸ‡¬ğŸ‡¶ Guinea Equatoriale', 'flag': 'ğŸ‡¬ğŸ‡¶'},
    {'code': '+241', 'country': 'ğŸ‡¬ğŸ‡¦ Gabon', 'flag': 'ğŸ‡¬ğŸ‡¦'},
    {'code': '+242', 'country': 'ğŸ‡¨ğŸ‡¬ Repubblica del Congo', 'flag': 'ğŸ‡¨ğŸ‡¬'},
    {
      'code': '+243',
      'country': 'ğŸ‡¨ğŸ‡© Repubblica Democratica del Congo',
      'flag': 'ğŸ‡¨ğŸ‡©',
    },
    {'code': '+244', 'country': 'ğŸ‡¦ğŸ‡´ Angola', 'flag': 'ğŸ‡¦ğŸ‡´'},
    {'code': '+245', 'country': 'ğŸ‡¬ğŸ‡¼ Guinea-Bissau', 'flag': 'ğŸ‡¬ğŸ‡¼'},
    {
      'code': '+246',
      'country': 'ğŸ‡®ğŸ‡´ Territorio Britannico dell\'Oceano Indiano',
      'flag': 'ğŸ‡®ğŸ‡´',
    },
    {'code': '+248', 'country': 'ğŸ‡¸ğŸ‡¨ Seychelles', 'flag': 'ğŸ‡¸ğŸ‡¨'},
    {'code': '+250', 'country': 'ğŸ‡·ğŸ‡¼ Ruanda', 'flag': 'ğŸ‡·ğŸ‡¼'},
    {'code': '+252', 'country': 'ğŸ‡¸ğŸ‡´ Somalia', 'flag': 'ğŸ‡¸ğŸ‡´'},
    {'code': '+253', 'country': 'ğŸ‡©ğŸ‡¯ Gibuti', 'flag': 'ğŸ‡©ğŸ‡¯'},
    {'code': '+255', 'country': 'ğŸ‡¹ğŸ‡¿ Tanzania', 'flag': 'ğŸ‡¹ğŸ‡¿'},
    {'code': '+256', 'country': 'ğŸ‡ºğŸ‡¬ Uganda', 'flag': 'ğŸ‡ºğŸ‡¬'},
    {'code': '+257', 'country': 'ğŸ‡§ğŸ‡® Burundi', 'flag': 'ğŸ‡§ğŸ‡®'},
    {'code': '+258', 'country': 'ğŸ‡²ğŸ‡¿ Mozambico', 'flag': 'ğŸ‡²ğŸ‡¿'},
    {'code': '+260', 'country': 'ğŸ‡¿ğŸ‡² Zambia', 'flag': 'ğŸ‡¿ğŸ‡²'},
    {'code': '+261', 'country': 'ğŸ‡²ğŸ‡¬ Madagascar', 'flag': 'ğŸ‡²ğŸ‡¬'},
    {'code': '+262', 'country': 'ğŸ‡·ğŸ‡ª Riunione', 'flag': 'ğŸ‡·ğŸ‡ª'},
    {'code': '+263', 'country': 'ğŸ‡¿ğŸ‡¼ Zimbabwe', 'flag': 'ğŸ‡¿ğŸ‡¼'},
    {'code': '+264', 'country': 'ğŸ‡³ğŸ‡¦ Namibia', 'flag': 'ğŸ‡³ğŸ‡¦'},
    {'code': '+265', 'country': 'ğŸ‡²ğŸ‡¼ Malawi', 'flag': 'ğŸ‡²ğŸ‡¼'},
    {'code': '+266', 'country': 'ğŸ‡±ğŸ‡¸ Lesotho', 'flag': 'ğŸ‡±ğŸ‡¸'},
    {'code': '+267', 'country': 'ğŸ‡§ğŸ‡¼ Botswana', 'flag': 'ğŸ‡§ğŸ‡¼'},
    {'code': '+268', 'country': 'ğŸ‡¸ğŸ‡¿ Eswatini', 'flag': 'ğŸ‡¸ğŸ‡¿'},
    {'code': '+269', 'country': 'ğŸ‡°ğŸ‡² Comore', 'flag': 'ğŸ‡°ğŸ‡²'},
    {'code': '+290', 'country': 'ğŸ‡¸ğŸ‡­ Sant\'Elena', 'flag': 'ğŸ‡¸ğŸ‡­'},
    {'code': '+291', 'country': 'ğŸ‡ªğŸ‡· Eritrea', 'flag': 'ğŸ‡ªğŸ‡·'},
    {'code': '+297', 'country': 'ğŸ‡¦ğŸ‡¼ Aruba', 'flag': 'ğŸ‡¦ğŸ‡¼'},
    {'code': '+298', 'country': 'ğŸ‡«ğŸ‡´ Isole FÃ¦r Ã˜er', 'flag': 'ğŸ‡«ğŸ‡´'},
    {'code': '+299', 'country': 'ğŸ‡¬ğŸ‡± Groenlandia', 'flag': 'ğŸ‡¬ğŸ‡±'},
  ];

  @override
  void initState() {
    super.initState();
    _phoneController = widget.controller ?? TextEditingController();
    _selectedCountryCode = widget.initialCountryCode ?? '+39';
    _phoneController.text = widget.initialPhoneNumber ?? '';
  }

  @override
  void dispose() {
    if (widget.controller == null) {
      _phoneController.dispose();
    }
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        if (widget.label != null) ...[
          Text(
            widget.label!,
            style: Theme.of(context).textTheme.bodyMedium?.copyWith(
              fontWeight: FontWeight.w500,
              color: Colors.grey[700],
            ),
          ),
          const SizedBox(height: 8),
        ],
        Row(
          children: [
            // Dropdown per il prefisso internazionale
            Container(
              width: 120,
              decoration: BoxDecoration(
                border: Border.all(color: Colors.grey[300]!),
                borderRadius: BorderRadius.circular(8),
              ),
              child: DropdownButtonHideUnderline(
                child: DropdownButton<String>(
                  value: _selectedCountryCode,
                  isExpanded: true,
                  items: _countryCodes.map((country) {
                    return DropdownMenuItem<String>(
                      value: country['code'],
                      child: Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 8),
                        child: Row(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            Text(
                              country['flag']!,
                              style: const TextStyle(fontSize: 16),
                            ),
                            const SizedBox(width: 8),
                            Expanded(
                              child: Text(
                                country['code']!,
                                style: const TextStyle(fontSize: 14),
                                overflow: TextOverflow.ellipsis,
                              ),
                            ),
                          ],
                        ),
                      ),
                    );
                  }).toList(),
                  onChanged: widget.enabled
                      ? (String? newValue) {
                          if (newValue != null) {
                            setState(() {
                              _selectedCountryCode = newValue;
                            });
                            widget.onCountryCodeChanged?.call(newValue);
                          }
                        }
                      : null,
                ),
              ),
            ),
            const SizedBox(width: 12),
            // Campo per il numero di telefono
            Expanded(
              child: TextFormField(
                controller: _phoneController,
                enabled: widget.enabled,
                keyboardType: TextInputType.phone,
                inputFormatters: [
                  FilteringTextInputFormatter.digitsOnly,
                  LengthLimitingTextInputFormatter(15),
                ],
                decoration: InputDecoration(
                  hintText: widget.hint ?? 'Numero di telefono',
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                    borderSide: BorderSide(color: Colors.grey[300]!),
                  ),
                  enabledBorder: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                    borderSide: BorderSide(color: Colors.grey[300]!),
                  ),
                  focusedBorder: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(8),
                    borderSide: BorderSide(
                      color: Theme.of(context).primaryColor,
                    ),
                  ),
                  contentPadding: const EdgeInsets.symmetric(
                    horizontal: 12,
                    vertical: 16,
                  ),
                ),
                onChanged: (value) {
                  widget.onPhoneNumberChanged?.call(value);
                },
                validator: widget.validator,
              ),
            ),
          ],
        ),
      ],
    );
  }

  // Metodi per ottenere i valori
  String get countryCode => _selectedCountryCode;
  String get phoneNumber => _phoneController.text;
  String get fullPhoneNumber => '$_selectedCountryCode${_phoneController.text}';
}
